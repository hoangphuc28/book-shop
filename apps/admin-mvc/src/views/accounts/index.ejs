<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/head.ejs'); %>
    <style>
      .paginate_button {
        background: transparent;
        padding: 5px 15px !important;
      }

      .dataTables_wrapper .dataTables_paginate .paginate_button:hover {
        background: rgba(249, 250, 251) !important;
        color: #374151 !important;
      }

      .paginate_button.current {
        background: transparent !important;
      }
    </style>
  </head>

  <body class="bg-gray-100 font-sans leading-normal tracking-normal">
    <div class="flex">
      <%- include('../partials/sidebar'); %>

      <div class="flex-grow bg-gray-100 p-6 ml-64">
        <div class="flex justify-between items-center mb-6">
          <h1 class="text-2xl font-semibold text-gray-900">Accounts</h1>
          <div class="relative">
            <!-- end create -->
          </div>
        </div>
        <div class="bg-white shadow rounded-lg p-4">
          <table class="min-w-full divide-y divide-gray-200">
          <%- include('../partials/toolBar.ejs',  { data: data }); %>
            <thead class="bg-gray-50">
              <tr>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Name
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Phone
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Email
                </th>
                <!-- <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Address
                </th> -->
                <!-- <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Total
                </th> -->
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Status
                </th>

                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                >
                  Create at
                </th>
                <th
                  class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider"
                ></th>
              </tr>
            </thead>
            <tbody class="bg-white divide-y divide-gray-200">
              <% data.items.forEach(item=> { %>
              <tr>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm font-medium text-gray-900">
                    <%= item.fullName %>
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm font-medium text-gray-900">
                    <%= item.phone %>
                  </div>
                </td>
                <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm font-medium text-gray-900">
                    <%= item.email %>
                  </div>
                </td>
                <!-- <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm font-medium text-gray-900">
                    <%= item.address %>
                  </div>
                </td> -->
                <!-- <td class="px-6 py-4 whitespace-nowrap">
                  <div class="text-sm font-medium text-gray-900">
                    <%= item.total %>VND
                  </div>
                </td> -->
                <td class="px-6 py-4 whitespace-nowrap text-sm">
                  <span
                  class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full <%= item.isActive ? 'bg-green-500 text-white' : 'bg-red-400 text-white' %>"
                >
                  <%= item.isActive ? 'ACTIVE' : 'INACTIVE' %>
                </span>
                </td>
                <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  <%= new Intl.DateTimeFormat('en-GB', { year: 'numeric' ,
                  month: 'long' , day: '2-digit' , }).format(new
                  Date(item.createdAt)); %>
                </td>
                <td>
                  <button type="button" class="border-solid border border-gray-300 hover:bg-gray-100 dark:hover:bg-gray-600 dark:hover:text-white p-1 rounded-md " data-id="<%= item.id %>" data-status="<%= item.isActive ? 'unblock' : 'block' %>">
                    <%= item.isActive ? 'Block' : 'UnBlock' %>
                  </button>
                </td>
              </tr>
              <% }) %>
            </tbody>
          </table>
        </div>
      </div>
    </div>
    <script>
      document.querySelectorAll('.toggle-button').forEach(button => {
        button.addEventListener('click', function(event) {
          event.preventDefault(); // Prevent any default action

          // Get the current status and ID from the data attributes
          const button = event.target;
          const accountId = button.getAttribute('data-id');
          const currentStatus = button.getAttribute('data-status');

          // Determine the new status and label
          const newStatus = currentStatus === 'block' ? 'unblock' : 'block';
          const isActive = newStatus === 'block' ? 'false' : 'true'; // Adjust based on your logic

          // Make the API call to update the account status
          fetch('/accounts/edit', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({ id: accountId, isActive })
          })
          .then(data => {
            // Update the button state and label
            button.setAttribute('data-status', newStatus);
            button.textContent = newStatus === 'block' ? 'Block' : 'Unblock';
            alert('Account updated successfully')
            const currentUrl = window.location.href;
              const currentParams = new URL(currentUrl).search;
              window.location.href = `/reviews${currentParams}`;
          })
          .catch((error) => {
            alert('Something error')
            console.error('Error:', error);
          });
        });
      });
      </script>


  </body>
</html>
